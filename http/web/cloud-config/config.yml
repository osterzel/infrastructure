#cloud-config
ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCXP0R6oA3/q7xeX++rjsZCR4mw69KZZQcDWamS8Aj+/gMO5xx7QZvf/3RYhDF/QZNix0GSG80x2KRZnwbTo/wnFp06BEeRYU3FHGOrS33O5Z4hn5THXUeiZdCUMQxeK03Lj+ajFHile20Eqx23RZwCkKWPY2hrneehLR02o1n8l1kSSxrKozLRge+uPrV1IVBszqZDcyXQ7KK5N3N/nmNnb81chZH8UGT0MlJbqKL90v+LdliVtwT9hKK2C0v3bHgDo+rPImEVMzXg85+kso88paZKntlvXSAbg9KfKHHKms/iykOhsnURPb99S/uR4Q8wUQd6piwBGcMR2hQ1P8KB allan@adegnan.net
coreos:
  etcd2:
    name: "%H"
    advertise-client-urls: "http://IPV4:2379"
    initial-advertise-peer-urls: "http://IPV4:2380"
    listen-client-urls: "http://0.0.0.0:2379,http://0.0.0.0:4001"
    listen-peer-urls: "http://IPV4:2380,http://IPV4:7001"
    initial-cluster: "node01=http://192.168.1.11:2380,node02=http://192.168.1.12:2380,node03=http://192.168.1.13:2380"
    initial-cluster-state: "existing"
  units:
    - name: "etcd2.service"
      command: start
      enable: true
      drop-ins:
        - name: 10-wait-var-lib.conf
          content: |
            [Unit]
            After=var-lib.mount
            Requires=var-lib.mount

            [Service]
            ExecStartPre=/usr/bin/mkdir -p /var/lib/etcd2 /data
            ExecStartPre=/usr/bin/ln -s /var/lib/etcd2 /data/etcd2 
    - name: fleet.service
      command: start
      enable: true
    - name: docker.service
      drop-ins:
        - name: 10-wait-var-lib.conf
          content: |
            [Unit]
            After=var-lib.mount
            Requires=var-lib.mount

            [Service]
            ExecStartPre=/usr/bin/mkdir -p /var/lib/docker /data
            ExecStartPre=/usr/bin/ln -s /var/lib/docker /data/docker
    - name: format-ephemeral.service
      command: start
      content: |
        [Unit]
        Description=Formats the ephemeral drive
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f /dev/sda
        ExecStart=/usr/sbin/mkfs.ext4 -F /dev/sda
    - name: var-lib.mount
      command: start
      content: |
        [Unit]
        Description=Mount ephemeral to /data
        [Mount]
        What=/dev/sda
        Where=/data
        Type=ext4
    - name: flanneld.service
      command: start
      enable: true
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.10.0.0/16","Backend":{"Type":"vxlan"}}'
    - name: install-kubernetes.service
      command: start
      content: |
        [Unit]
        Description=Install kubernetes

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=300
        Environment="URL=https://storage.googleapis.com/kubernetes-release/release/v1.1.7/bin/linux/amd64/hyperkube"
        Environment="OUTPUT_FILE=/opt/bin/hyperkube"
        Environment="MD5SUM=dd57058362afce77a94ba4e9152a4525"
        ExecStart=/usr/bin/mkdir -p /opt/bin
        ExecStart=/usr/bin/wget -q -O ${OUTPUT_FILE} ${URL}
        ExecStart=/usr/bin/md5sum ${OUTPUT_FILE}
        ExecStart=/usr/bin/chmod +x ${OUTPUT_FILE}
    - name: install-manifests.service
      command: start
      content: |
        [Unit]
        Description=Install manifests

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=300
        Environment="URL=http://nas.lan/manifests"
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /srv/kubernetes/manifests
        ExecStart=/usr/bin/wget -q -O /etc/kubernetes/manifests/kube-apiserver.yaml ${URL}/api/kube-apiserver.yaml
        ExecStart=/usr/bin/wget -q -O /etc/kubernetes/manifests/kube-podmaster.yaml ${URL}/api/kube-podmaster.yaml
        ExecStart=/usr/bin/wget -q -O /etc/kubernetes/manifests/kube-proxy.yaml ${URL}/compute/kube-proxy.yaml
        ExecStart=/usr/bin/wget -q -O /srv/kubernetes/manifests/kube-controller-manager.yaml ${URL}/master/kube-controller-manager.yaml
        ExecStart=/usr/bin/wget -q -O /srv/kubernetes/manifests/kube-scheduler.yaml ${URL}/master/kube-scheduler.yaml
    - name: kube-kubelet.service
      command: start
      enabled: true
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        After=docker.service install-kubernetes.service
        Requires=docker.service install-kubernetes.service

        [Service]
        ExecStart=/opt/bin/hyperkube kubelet \
          --api-servers=http://127.0.0.1:8080 \
          --allow-privileged=true \
          --config=/etc/kubernetes/manifests \
          --v=2
        Restart=always
        RestartSec=5
