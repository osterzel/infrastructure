#cloud-config
ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCXP0R6oA3/q7xeX++rjsZCR4mw69KZZQcDWamS8Aj+/gMO5xx7QZvf/3RYhDF/QZNix0GSG80x2KRZnwbTo/wnFp06BEeRYU3FHGOrS33O5Z4hn5THXUeiZdCUMQxeK03Lj+ajFHile20Eqx23RZwCkKWPY2hrneehLR02o1n8l1kSSxrKozLRge+uPrV1IVBszqZDcyXQ7KK5N3N/nmNnb81chZH8UGT0MlJbqKL90v+LdliVtwT9hKK2C0v3bHgDo+rPImEVMzXg85+kso88paZKntlvXSAbg9KfKHHKms/iykOhsnURPb99S/uR4Q8wUQd6piwBGcMR2hQ1P8KB allan@adegnan.net
coreos:
  etcd2:
    name: "%H"
    advertise-client-urls: "http://{{ public_ip }}:2379"
    initial-advertise-peer-urls: "http://{{ private_ip }}:2380"
    listen-client-urls: "http://0.0.0.0:2379,http://0.0.0.0:4001"
    listen-peer-urls: "http://{{ private_ip }}:2380,http://{{ private_ip }}:7001"
    initial-cluster: "{* initital_cluster *}"
    initial-cluster-state: "{{ initital_cluster_state }}"
  units:
    - name: etcd2.service
      command: start
      enable: true
    - name: fleet.service
      command: start
      enable: true
    - name: flanneld.service
      command: start
      enable: true
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.10.0.0/16","Backend":{"Type":"vxlan"}}'
    - name: format-ephemeral.service
      command: start
      content: |
        [Unit]
        Description=Formats the ephemeral drive
        After=dev-sda.device
        Requires=dev-sda.device
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f /dev/sda
        ExecStart=/usr/sbin/mkfs.xfs -f /dev/sda
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount ephemeral to /var/lib/docker
        Requires=format-ephemeral.service
        After=format-ephemeral.service
        [Mount]
        What=/dev/sda
        Where=/var/lib/docker
        Type=xfs
    - name: docker.service
      drop-ins:
        - name: 10-wait-docker.conf
          content: |
            [Unit]
            After=var-lib-docker.mount
            Requires=var-lib-docker.mount

    - name: kube-kubelet.service
      command: start
      enabled: true
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        After=var-lib-docker.mount docker.service
        Requires=var-lib-docker.mount docker.service

        [Service]
        Environment="URL=http://nas.lan/manifests"
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /srv/kubernetes/manifests
        ExecStartPre=/usr/bin/wget --silent -o /etc/kubernetes/manifests/kube-apiserver.yml ${URL}/api/kube-apiserver.yml
        ExecStartPre=/usr/bin/wget --silent -o /etc/kubernetes/manifests/kube-podmaster.yml ${URL}/api/kube-podmaster.yml
        ExecStartPre=/usr/bin/wget --silent -o /etc/kubernetes/manifests/kube-proxy.yml ${URL}/compute/kube-proxy.yml
        ExecStartPre=/usr/bin/wget --silent -o /srv/kubernetes/manifests/kube-controller-manager.yml ${URL}/master/kube-controller-manager.yml
        ExecStartPre=/usr/bin/wget --silent -o /srv/kubernetes/manifests/kube-scheduler.yml ${URL}/master/kube-scheduler.yml
        ExecStartPre=/usr/bin/docker pull gcr.io/google_containers/hyperkube-amd64:{{ kubernetes_version }}
        ExecStart=/usr/bin/docker run \
          --volume=/:/rootfs:ro \
          --volume=/sys:/sys:ro \
          --volume=/var/lib/docker/:/var/lib/docker:rw \
          --volume=/var/lib/kubelet/:/var/lib/kubelet:rw \
          --volume=/var/run:/var/run:rw \
          --net=host \
          --pid=host \
          --privileged=true \
         gcr.io/google_containers/hyperkube-amd64:{{ kubernetes_version }} \
         /hyperkube kubelet \
           --containerized \
           --hostname-override="127.0.0.1" \
           --address="0.0.0.0" \
           --api-servers=http://127.0.0.1:8080 \
           --config=/etc/kubernetes/manifests \
           --cluster-dns=10.0.0.10 \
           --cluster-domain=cluster.local \
           --allow-privileged=true
        Restart=always
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
