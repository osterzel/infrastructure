apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: gcr.io/google_containers/hyperkube:v1.2.4
    command:
    - /hyperkube
    - apiserver
    - --admission-control=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,AlwaysPullImages
    - --authorization-mode=AlwaysAllow
    - --service-cluster-ip-range=10.200.0.0/16
    - --allow-privileged=true
    - --etcd-servers=http://127.0.0.1:2379
    - --cloud-provider=
    - --apiserver-count=3
    - --token-auth-file=/var/run/kubernetes/tokens.csv
    - --client-ca-file=/var/run/kubernetes/ca.pem
    - --tls-cert-file=/var/run/kubernetes/kube-apiserver-server.pem
    - --tls-private-key-file=/var/run/kubernetes/kube-apiserver-server-key.pem
    - --logtostderr=true
    - --logtostderr=true
    readinessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 8080
      initialDelaySeconds: 10
      timeoutSeconds: 1
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz/ping
        port: 8080
      initialDelaySeconds: 5
      timeoutSeconds: 1
    ports:
    - containerPort: 6443
      hostPort: 6443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /var/run/kubernetes
      name: ssl-certs-kubernetes
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
      path: /var/run/kubernetes
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
